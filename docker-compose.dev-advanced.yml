# ===========================================
# DOCKER COMPOSE - DESARROLLO AVANZADO
# Configuración optimizada para desarrollo con hot reload
# ===========================================

version: '3.8'

services:
  # Aplicación LMS Platform - Desarrollo Avanzado
  lms-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: lms-platform-dev-advanced
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    environment:
      - NODE_ENV=development
      - FAST_REFRESH=true
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - DATABASE_URL=${DATABASE_URL:-mysql://lms_user:lms_password@mysql-dev:3306/lms_platform_dev}
      - REDIS_URL=${REDIS_URL:-redis://redis-dev:6379}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - ENABLE_METRICS=true
      - SEED_DATABASE=true
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - lms-dev-uploads:/app/uploads
      - lms-dev-logs:/app/logs
    depends_on:
      mysql-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    networks:
      - lms-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lmsplatform.service=app"
      - "com.lmsplatform.environment=development"

  # MySQL - Desarrollo con configuración optimizada
  mysql-dev:
    image: mysql:8.0
    container_name: lms-mysql-dev-advanced
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=lms_platform_dev
      - MYSQL_USER=lms_user
      - MYSQL_PASSWORD=lms_password
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./docker/mysql/dev-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./docker/mysql/dev-config.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - lms-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "lms_user", "-plms_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200
    labels:
      - "com.lmsplatform.service=database"
      - "com.lmsplatform.environment=development"

  # Redis - Desarrollo con persistencia
  redis-dev:
    image: redis:7-alpine
    container_name: lms-redis-dev-advanced
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
      - ./docker/redis/dev-redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - lms-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server /usr/local/etc/redis/redis.conf
    labels:
      - "com.lmsplatform.service=cache"
      - "com.lmsplatform.environment=development"

  # Nginx - Load Balancer para desarrollo
  nginx-dev:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: lms-nginx-dev-advanced
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/nginx.conf
      - lms-dev-logs:/var/log/nginx
    depends_on:
      - lms-app
    networks:
      - lms-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.lmsplatform.service=loadbalancer"
      - "com.lmsplatform.environment=development"

  # MailHog - Email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: lms-mailhog-dev
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - lms-dev-network
    restart: unless-stopped
    labels:
      - "com.lmsplatform.service=email-testing"
      - "com.lmsplatform.environment=development"

  # Adminer - Database management
  adminer:
    image: adminer:latest
    container_name: lms-adminer-dev
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=mysql-dev
    depends_on:
      - mysql-dev
    networks:
      - lms-dev-network
    restart: unless-stopped
    labels:
      - "com.lmsplatform.service=database-admin"
      - "com.lmsplatform.environment=development"

volumes:
  mysql_dev_data:
    driver: local
    labels:
      - "com.lmsplatform.volume=mysql-data"
  redis_dev_data:
    driver: local
    labels:
      - "com.lmsplatform.volume=redis-data"
  lms-dev-uploads:
    driver: local
    labels:
      - "com.lmsplatform.volume=uploads"
  lms-dev-logs:
    driver: local
    labels:
      - "com.lmsplatform.volume=logs"

networks:
  lms-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1
    labels:
      - "com.lmsplatform.network=development"
